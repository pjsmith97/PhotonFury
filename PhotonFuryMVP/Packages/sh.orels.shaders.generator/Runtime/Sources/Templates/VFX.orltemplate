Shader %ShaderName
{
    Properties {
        %Properties
    }

    SubShader
    {
        Tags { %ShaderTags }
        %ShaderModifiers

        // Global Include Start
        CGINCLUDE
        #include "UnityStandardUtils.cginc"
        #include "Lighting.cginc"
        #include "AutoLight.cginc"

        // Sampling Library
        %SamplingLibrary
        // Library Functions
        %LibraryFunctions
        ENDCG
        // Global Include End

        // PrePasses
        %PrePasses

        Pass
        {
            Tags { "LightMode" = "ForwardBase" %PassTags }
            %PassModifiers

            // ForwardBase Pass Start
            CGPROGRAM
            #pragma target 4.5
            #pragma multi_compile_instancing
            #pragma multi_compile_fwdbase
            #pragma multi_compile_fog
            #pragma shader_feature_local NEED_FOG
            #pragma vertex Vertex
            #pragma fragment Fragment
            %ShaderFeatures

            #define UNITY_INSTANCED_LOD_FADE
            #define UNITY_INSTANCED_SH
            #define UNITY_INSTANCED_LIGHTMAPSTS

            #ifndef UNITY_PASS_FORWARDBASE
                #define UNITY_PASS_FORWARDBASE
            #endif

            // ShaderDefines
            %ShaderDefines
            // DataStructs
            %DataStructs
            // GlobalVariables
            %GlobalVariables

            #if defined(NEED_DEPTH)
                UNITY_DECLARE_DEPTH_TEXTURE(_CameraDepthTexture);
            #endif

            // Variables
            %Variables

            // Textures
            %Textures

            // Functions
            %Functions

            // ForwardBase Vertex
            FragmentData Vertex(VertexData v)
            {
                UNITY_SETUP_INSTANCE_ID(v);
                FragmentData o;
                UNITY_INITIALIZE_OUTPUT(FragmentData, o);
                UNITY_TRANSFER_INSTANCE_ID(v, o);
                UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);

                // ForwardBase Vertex Chain
                %VertexFunctions

                // ForwardBase VertexBase
                %VertexBase

                return o;
            }

            // ForwardBase Fragment
            half4 Fragment(FragmentData i, int facing: VFACE) : SV_TARGET
            {
                UNITY_SETUP_INSTANCE_ID(i);
                UNITY_SETUP_STEREO_EYE_INDEX_POST_VERTEX(i);
                #if defined(NEED_FOG)
                    #ifdef FOG_COMBINED_WITH_TSPACE
                        UNITY_EXTRACT_FOG_FROM_TSPACE(i);
                    #elif defined(FOG_COMBINED_WITH_WORLD_POS)
                        UNITY_EXTRACT_FOG_FROM_WORLD_POS(i);
                    #else
                        UNITY_EXTRACT_FOG(i);
                    #endif
                #endif

                SurfaceData o = CreateSurfaceData();
                MeshData d = CreateMeshData(i);
                half4 FinalColor = 1;

                // ForwardBase Fragment Chain
                %FragmentFunctions

                // ForwardBase FragmentBase
                %FragmentBase

                #if defined(NEED_FOG)
                    UNITY_APPLY_FOG(_unity_fogCoord, FinalColor);
                #endif

                // Final Color Chain
                %ColorFunctions

                return FinalColor;
            }

            ENDCG
            // ForwardBase Pass End
        }

        // PostPasses
        %PostPasses
    }
    CustomEditor "%CustomEditor"
}

